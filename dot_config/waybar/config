{
    "height": 30, // Waybar height (to be removed for auto height)
    "spacing": 3, // Gaps between modules (4px)
    "modules-left": ["sway/workspaces", "sway/mode"],
    "modules-center": ["sway/window"],
    "modules-right": ["idle_inhibitor", "custom/output-scale", "custom/pa-cycle", "pulseaudio", "network", "network#wifi", "cpu", "memory", "temperature", "keyboard-state", "sway/language", "bluetooth", "clock", "battery", "tray"],
    // Modules configuration
    // "sway/workspaces": {
    //     "disable-scroll": true,
    //     "all-outputs": true,
    //     "format": "{name}: {icon}",
    //     "format-icons": {
    //         "1": "ÔÑ†",
    //         "2": "Ôâ®",
    //         "3": "ÔÑ°",
    //         "4": "ÔÜº",
    //         "5": "ÔÅµ",
    //         "urgent": "ÔÅ™",
    //         "focused": "ÔÜí",
    //         "default": "ÔÑë"
    //     }
    // },
    "keyboard-state": {
        "capslock": true,
        "format": "Û∞åå {icon}",
        "format-icons": {
            "locked": "ÔÄ£",
            "unlocked": "ÔÇú"
        }
    },
    "sway/language": {
        "format": "{flag}",
    },
    "sway/mode": {
        "format": "<span style=\"italic\">{}</span>"
    },
    "mpd": {
        "format": "{stateIcon} {consumeIcon}{randomIcon}{repeatIcon}{singleIcon}{artist} - {album} - {title} ({elapsedTime:%M:%S}/{totalTime:%M:%S}) ‚∏®{songPosition}|{queueLength}‚∏© {volume}% ÔÄÅ",
        "format-disconnected": "Disconnected ÔÄÅ",
        "format-stopped": "{consumeIcon}{randomIcon}{repeatIcon}{singleIcon}Stopped ÔÄÅ",
        "unknown-tag": "N/A",
        "interval": 2,
        "consume-icons": {
            "on": "ÔÉÑ "
        },
        "random-icons": {
            "off": "<span color=\"#f53c3c\">ÔÅ¥</span> ",
            "on": "ÔÅ¥ "
        },
        "repeat-icons": {
            "on": "ÔÄû "
        },
        "single-icons": {
            "on": "ÔÄû1 "
        },
        "state-icons": {
            "paused": "ÔÅå",
            "playing": "ÔÅã"
        },
        "tooltip-format": "MPD (connected)",
        "tooltip-format-disconnected": "MPD (disconnected)"
    },
    "idle_inhibitor": {
        "format": "{icon}",
        "format-icons": {
            "activated": "Û∞í≥",
            "deactivated": "Û∞í≤"
        }
    },
    "tray": {
        "icon-size": 20,
        "spacing": 10
    },
    "clock": {
        "tooltip-format": "<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>",
        "format-alt": "{:%Y-%m-%d}",
        "format": "{:%a %b %d, %H:%M}"
    },
    "cpu": {
        "format": "{usage}% Û∞ª†",
        "tooltip": false
    },
    "memory": {
        "format": "{}% Û∞çõ"
    },
    "temperature": {
        // "thermal-zone": 2,
        "hwmon-path": "/dev/cpu_tdie_temp",
        "critical-threshold": 80,
        "format": "{temperatureC}¬∞C Ôãõ",
    },
    "backlight": {
        // "device": "acpi_video1",
        "format": "{percent}% {icon}",
        "format-icons": ["ÔÜÖ", "ÔÑë"]
    },
    "battery": {
        "bat": "hidpp_battery_1",
        "states": {
            "good": 95,
            "warning": 30,
            "critical": 15
        },
        "format": "Û∞çΩ {capacity}% {icon}",
        "format-charging": "Û∞çΩ {capacity}% ÔÉß",
        "format-plugged": "Û∞çΩ {capacity}% Ôá¶",
        "format-alt": "{time} {icon}",
        // "format-good": "", // An empty format will hide the module
        // "format-full": "",
        "format-icons": ["ÔâÑ", "ÔâÉ", "ÔâÇ", "ÔâÅ", "ÔâÄ"]
    },
    "network": {
        "interface": "net0", // (Optional) To force the use of this interface
        "format-wifi": "{essid} ({signalStrength}%) Ôá´",
        "format-ethernet": "{ipaddr}/{cidr} Û∞≤ê",
        "tooltip-format": "{ifname} via {gwaddr} Ôûñ",
        "format-linked": "{ifname} (No IP) Ôûñ",
        "format-disconnected": "Disconnected ‚ö†",
        "format-alt": "{ifname}: {ipaddr}/{cidr}"
    },
    "network#wifi": {
        "interface": "wifi0",
        "format-wifi": "{essid} ({ipaddr} {signalStrength}%) Ôá´",
        "format-ethernet": "{ipaddr}/{cidr} Ôûñ",
        "tooltip-format": "{ifname} via {gwaddr} Ôûñ",
        "format-linked": "{ifname} (No IP) Ôûñ",
        "format-disconnected": "Disconnected ‚ö†",
        "format-alt": "{ifname}: {ipaddr}/{cidr}"
    },
    "pulseaudio": {
        // "scroll-step": 1, // %, can be a float
        "format": "{volume}% {icon} {format_source}",
        "format-bluetooth": "{volume}% {icon}Ôäî {format_source}",
        "format-bluetooth-muted": "Ôö© {icon}Ôäî {format_source}",
        "format-muted": "Û∞ùü {format_source}",
        "format-source": " {volume}% ÔÑ∞",
        "format-source-muted": "ÔÑ±",
        "format-icons": {
            "headphone": "ÔÄ•",
            "hands-free": "Ôñê",
            "headset": "Ôñê",
            "phone": "ÔÇï",
            "portable": "ÔÇï",
            "car": "ÔÜπ",
            "default": ["ÔÄ¶", "ÔÄß", "ÔÄ®"]
        },
        "on-click": "pavucontrol"
    },
    "bluetooth": {
      "format": "Ôäì {status}",
      "format-connected": "Ôäî {device_alias}",
      "format-connected-battery": "Ôäî {device_alias} {device_battery_percentage}%"
    },
    "custom/media": {
        "format": "{icon} {}",
        "return-type": "json",
        "max-length": 40,
        "format-icons": {
            "spotify": "ÔÜº",
            "default": "üéú"
        },
        "escape": true,
        "exec": "$HOME/.config/waybar/mediaplayer.py 2> /dev/null" // Script in resources folder
        // "exec": "$HOME/.config/waybar/mediaplayer.py --player spotify 2> /dev/null" // Filter player based on name
    },
    "custom/output-scale": {
        "format": "{icon} {}",
        "return-type": "json",
        "format-icons": {
            "scale": " \uf0b2",
            "noscale": "\uf066"
        },
        "exec-on-event": true,
        "interval": "once",
        "exec": "( swaymsg -r -t get_outputs | jq '.[0].scale' | xargs test 1.0 == ) && echo '{\"alt\": \"noscale\",\"class\":\"activated\"}' || echo '{\"alt\":\"scale\"}'",
        "exec-if": "sleep 0.1", // Give enough time for `sway output` command changes to propagate so we can read them in the next `exec`
        "on-click": "( swaymsg -r -t get_outputs | jq '.[0].scale' | xargs test 1.0 = ) && swaymsg output DP-1 scale 1.4 || swaymsg output DP-1 scale 1; pkill -SIGRTMIN+1 waybar",
        "signal": 1
    },
    "custom/pa-cycle": {
        "return-type": "json",
        "exec-on-event": true,
        "interval": 10,
        "exec": "pactl --format=json list sinks | jq -cM --unbuffered \"map(select(.name == \\\"$(pactl get-default-sink)\\\"))[0].properties | {text:(.\\\"media.name\\\" // .\\\"alsa.name\\\" // .\\\"node.name\\\")}\"",
        "exec-if": "sleep 0.1", // Give enough time for `pactl get-default-sink` to update
        "on-click": "pactl --format=json list sinks short | jq -cM --unbuffered \"[.[].name] | .[((index(\\\"$(pactl get-default-sink)\\\")+1)%length)]\" | xargs pactl set-default-sink"
    }
}
